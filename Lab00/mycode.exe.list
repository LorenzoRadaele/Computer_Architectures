EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
mycode.exe -- emu8086 assembler version: 4.08  
 
[ 05/10/2021  --  12:52:09 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .MODEL small
[   2]        :                                       .STACK
[   3]        :                                       DIM EQU 20
[   4]        :                                       .DATA
[   5]    0100: 00 00 00 00 00 00 00 00 00 00 00 00   TABLE DB DIM DUP(?)
                00 00 00 00 00 00 00 00             
[   6]        :                                       .CODE
[   7]    0120: BA 10 00 8E DA                        .STARTUP
[   8]    0125: B9 14 00                              MOV CX, DIM
[   9]    0128: BF 00 00                              LEA DI, TABLE
[  10]    012B: B4 01                                 MOV AH, 1 ; reading
[  11]    012D: CD 21                                 lab1: INT 21H
[  12]    012F: 88 05                                 MOV [DI], AL
[  13]    0131: 47                                    INC DI
[  14]    0132: 49                                    DEC CX
[  15]    0133: 83 F9 00                              CMP CX, 0
[  16]    0136: 75 F5                                 JNE lab1 ; loop 20 times
[  17]    0138: B1 FF                                 MOV CL, 0FFH
[  18]    013A: BF 00 00                              MOV DI, 0
[  19]    013D: 3A 0D                                 ciclo: CMP CL, TABLE[DI] ; compare with current minimum
[  20]    013F: 72 02                                 JB dopo
[  21]    0141: 8A 0D                                 MOV CL, TABLE[DI] ; store new minimum
[  22]    0143: 47                                    dopo: INC DI
[  23]    0144: 83 FF 14                              CMP DI, DIM
[  24]    0147: 72 F4                                 JB ciclo
[  25]    0149: 8A D1                                 output: MOV DL, CL
[  26]    014B: B4 02                                 MOV AH, 2
[  27]    014D: CD 21                                 INT 21H ; display
[  28]    014F: B8 00 4C CD 21                        .EXIT
[  29]        :                                       END
[  30]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 54      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: DB      -   check sum (l.byte)
0013: 33      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 12      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 12      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
